#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
Problem #2: Even Fibonacci numbers
==================================

Each new term in the Fibonacci sequence is generated by adding
the previous two terms. By starting with 1 and 2, the first 10
terms will be:

    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values
do not exceed four million, find the sum of the even-valued
terms.
"""

from itertools import islice, takewhile
import unittest


def solve(exclusive_limit):
    predicate = lambda x: x < exclusive_limit
    xs = takewhile(predicate, generate_fibonacci())
    return sum(xs)

def generate_fibonacci():
    """Generate the Fibonacci sequence."""
    a = 0
    b = 1
    while True:
        a, b = b, a + b
        yield b


class Problem002TestCase(unittest.TestCase):

    def test_fibonacci(self):
        expected = [1, 2, 3, 5, 8, 13, 21, 34, 55, 89]
        actual = list(islice(generate_fibonacci(), 10))
        self.assertEqual(actual, expected)

    def test_solution(self):
        self.assertEqual(solve(4000000), 9227463)


if __name__ == '__main__':
    unittest.main()
