#!/usr/bin/env julia

# Problem #2: Even Fibonacci numbers
# ==================================
#
# Each new term in the Fibonacci sequence is generated by adding
# the previous two terms. By starting with 1 and 2, the first 10
# terms will be:
#
#     1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values
# do not exceed four million, find the sum of the even-valued
# terms.

using Base.Test


function solve(exclusive_limit)
    predicate = x -> x < exclusive_limit
    fibonacci_task = @task fibonacci()
    fibonaccis = collect(@task takewhile(predicate, fibonacci_task))

    evens = filter(even, fibonaccis)

    sum(evens)
end

function fibonacci()
    a = 0
    b = 1
    while true
        a, b = b, a + b
        produce(b)
    end
end

function takewhile(predicate, iterable)
    for x in iterable
        if !predicate(x)
            return
        end
        produce(x)
    end
end

even(x) = x % 2 == 0


# --- tests ---

function test_fibonacci()
    expected = [1, 2, 3, 5, 8, 13, 21, 34, 55, 89]
    task = @task fibonacci()
    actual = [consume(task) for _ = 1:10]
    @test actual == expected
end

test_solution() = @test solve(4000000) == 4613732

function run_tests()
    test_fibonacci()
    test_solution()
    println("Tests were successful.")
end

run_tests()
